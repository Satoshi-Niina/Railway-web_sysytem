version: '3.8'

services:
  # PostgreSQL データベース（ステージング用）
  postgres:
    image: postgres:15-alpine
    container_name: railway_maintenance_db_staging
    environment:
      POSTGRES_DB: ${DB_NAME:-railway_maintenance_staging}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_staging:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d
    networks:
      - railway_network_staging
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js アプリケーション（ステージング用）
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: railway_maintenance_app_staging
    environment:
      - NODE_ENV=staging
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-railway_maintenance_staging}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - railway_network_staging
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data_staging:

networks:
  railway_network_staging:
    driver: bridge 